[build-system]
requires = ["setuptools>=71", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "imbalanced-learn"
dynamic = ["version", "readme"]
description = "Toolbox for imbalanced dataset in machine learning"
authors = [
    { name="G. Lemaitre", email="g.lemaitre58@gmail.com"},
    { name="C. Aridas", email="ichkoar@gmail.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
]
requires-python = ">=3.10"
dependencies = [
   "numpy>=1.24.3,<3",
   "scipy>=1.10.1,<2",
   "scikit-learn>=1.3.2,<2",
   "sklearn-compat>=0.1,<1",
   "joblib>=1.1.1,<2",
   "threadpoolctl>=2.0.0,<4",
]

[tool.setuptools.dynamic]
version = { file = "imblearn/VERSION.txt" }
readme = { file = "README.rst" }

[project.optional-dependencies]
dev = [
    "ipykernel",
    "ipython",
    "jupyterlab",
]
docs = [
    "pandas>=1.5.3,<3",
    "tensorflow>=2.13.1,<3",
    "matplotlib>=3.7.3,<4",
    "seaborn>=0.12.2,<1",
    "memory_profiler>=0.61.0,<1",
    "numpydoc>=1.5.0,<2",
    "sphinx>=8.0.2,<9",
    "sphinx-gallery>=0.13.0,<1",
    "sphinxcontrib-bibtex>=2.6.3,<3",
    "sphinx-copybutton>=0.5.2,<1",
    "pydata-sphinx-theme>=0.15.4,<1",
    "sphinx-design>=0.6.1,<1",
]
linters = [
    "black==23.3.0",
    "ruff==0.4.8",
    "pre-commit",
]
optional = [
    "pandas>=1.5.3,<3",
]
tensorflow = [
    "tensorflow>=2.13.1,<3",
]
keras = [
    "keras>=3.0.5,<4",
]
tests = [
    "packaging>=23.2,<25",
    "pytest>=7.2.2,<9",
    "pytest-cov>=4.1.0,<6",
    "pytest-xdist>=3.5.0,<4",
]

[project.urls]
Homepage = "https://imbalanced-learn.org/"
Source = "https://github.com/scikit-learn-contrib/imbalanced-learn"
Issues = "https://github.com/scikit-learn-contrib/imbalanced-learn/issues"

[tool.setuptools]
packages = ["imblearn"]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tool.pixi.dependencies]
numpy = ">=1.24.3,<3"
scipy = ">=1.10.1,<2"
scikit-learn = ">=1.3.2,<2"
sklearn-compat = ">=0.1,<1"
joblib = ">=1.1.1,<2"
threadpoolctl = ">=2.0.0,<4"

[tool.pixi.feature.dev.dependencies]
ipykernel = "*"
ipython = "*"
jupyterlab = "*"

[tool.pixi.feature.docs.dependencies]
matplotlib = ">=3.7.3,<4"
seaborn = ">=0.12.2,<1"
memory_profiler = ">=0.61.0,<1"
numpydoc = ">=1.5.0,<2"
sphinx = ">=8.0.2,<9"
sphinx-gallery = ">=0.13.0,<1"
sphinxcontrib-bibtex = ">=2.4.1,<3"
sphinx-copybutton = ">=0.5.2,<1"
pydata-sphinx-theme = ">=0.15.4,<1"
sphinx-design = ">=0.6.1,<1"

[tool.pixi.feature.linters.dependencies]
black = "==23.3.0"
ruff = "==0.4.8"
pre-commit = "*"

[tool.pixi.feature.optional.dependencies]
pandas = ">=1.5.3,<3"

[tool.pixi.feature.keras]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[tool.pixi.feature.keras.dependencies]
keras = ">=3.0.5,<4"

[tool.pixi.feature.tensorflow]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[tool.pixi.feature.tensorflow.dependencies]
tensorflow = ">=2.13.1,<3"

[tool.pixi.feature.min-dependencies.dependencies]
numpy = "==1.24.3"
scipy = "==1.10.1"
scikit-learn = "==1.3.2"
joblib = "==1.1.1"
threadpoolctl = "==2.0.0"

[tool.pixi.feature.min-optional-dependencies.dependencies]
pandas = "==1.5.3"

[tool.pixi.feature.min-keras]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[tool.pixi.feature.min-keras.dependencies]
keras = "==3.0.5"

[tool.pixi.feature.min-tensorflow]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[tool.pixi.feature.min-tensorflow.dependencies]
tensorflow = "==2.13.1"

[tool.pixi.feature.sklearn-1-4.dependencies]
scikit-learn = "~=1.4.0"

[tool.pixi.feature.sklearn-1-5.dependencies]
scikit-learn = "~=1.5.0"

[tool.pixi.feature.py310.dependencies]
python = "~=3.10.0"

[tool.pixi.feature.py311.dependencies]
python = "~=3.11.0"

[tool.pixi.feature.py312.dependencies]
python = "~=3.12.0"

[tool.pixi.feature.py313.dependencies]
python = "~=3.13.0"

[tool.pixi.feature.tests.dependencies]
packaging = ">=23.2,<25"
pytest = ">=7.2.2,<9"
pytest-cov = ">=4.1.0,<6"
pytest-xdist = ">=3.5.0,<4"

[tool.pixi.pypi-dependencies]
imbalanced-learn = { path = ".", editable = true }

[tool.pixi.feature.docs.tasks]
build-docs = { cmd = "make html", cwd = "doc" }
clean-docs = { cmd = "rm -rf _build/ && rm -rf auto_examples/ && rm -rf reference/generated/", cwd = "doc" }

[tool.pixi.feature.linters.tasks]
linters = { cmd = "pre-commit install && pre-commit run -v --all-files --show-diff-on-failure" }

[tool.pixi.feature.tests.tasks]
tests = { cmd = "pytest -vsl --cov=imblearn --cov-report=xml imblearn" }

[tool.pixi.environments]
linters = ["linters"]
docs = ["optional", "docs", "tensorflow"]
optional = ["optional"]
tests = ["tests", "tensorflow"]
dev = ["dev", "optional", "docs", "linters", "tests", "tensorflow"]

ci-py310-min-dependencies = ["py310", "min-dependencies", "tests"]
ci-py310-min-optional-dependencies = ["py310", "min-dependencies", "min-optional-dependencies", "tests"]
ci-py310-min-keras = ["py310", "min-keras", "tests"]
ci-py310-min-tensorflow = ["py310", "min-tensorflow", "tests"]

ci-py311-sklearn-1-4 = ["py311", "sklearn-1-4", "tests"]
ci-py311-sklearn-1-5 = ["py311", "sklearn-1-5", "tests"]
ci-py311-latest-tensorflow = ["py311", "tensorflow", "tests"]
ci-py311-latest-keras = ["py311", "keras", "tests"]

ci-py313-latest-dependencies = ["py313", "tests"]
ci-py313-latest-optional-dependencies = ["py313", "optional", "tests"]

[tool.black]
line-length = 88
target_version = ['py310', 'py311']
preview = true
# Exclude irrelevant directories for formatting
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.vscode
  | \.pytest_cache
  | \.idea
  | build
  | dist
)/
'''

[tool.ruff]
# max line length for black
line-length = 88
target-version = "py310"
exclude=[
    ".git",
    "__pycache__",
    "dist",
    "doc/_build",
    "doc/auto_examples",
    "build",
]

[tool.ruff.lint]
# all rules can be found here: https://beta.ruff.rs/docs/rules/
select = ["E", "F", "W", "I"]
ignore=[
    # space before : (needed for how black formats slicing)
    "E203",
    # do not assign a lambda expression, use a def
    "E731",
    # do not use variables named 'l', 'O', or 'I'
    "E741",
]

[tool.ruff.lint.per-file-ignores]
# It's fine not to put the import at the top of the file in the examples
# folder.
"examples/*"=["E402"]
"doc/conf.py"=["E402"]

[tool.pytest.ini_options]
filterwarnings = [
    # Turn deprecation warnings into errors
    "error::FutureWarning",
    "error::DeprecationWarning",

    # raised by `joblib` in old versions
    "ignore:.*distutils Version classes are deprecated.*:DeprecationWarning",
]
addopts = "--doctest-modules --color=yes -rs"
doctest_optionflags = "NORMALIZE_WHITESPACE ELLIPSIS"

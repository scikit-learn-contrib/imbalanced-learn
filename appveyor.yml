environment:
  # There is no need to run the build for all the Python version /
  # architectures combo as the generated nilearn wheel is the same on all
  # platforms (universal wheel).
  # We run the tests on 2 different target platforms for testing purpose only.
  # We use miniconda versions of Python provided by appveyor windows images
  matrix:
    - PYTHON: "C:\\Miniconda-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Miniconda3-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

install:
  # Prepend miniconda installed Python to the PATH of this build
  # Add Library/bin directory to fix issue
  # https://github.com/conda/conda/issues/1753
  - "SET PATH=%PYTHON%;%PYTHON%\\Tools\\Scripts;%PYTHON%\\Scripts;%PYTHON%\\Library\\bin;%PATH%"
  - "dir C:\\Miniconda-x64 conda.exe /b/s"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Installed prebuilt dependencies from conda
  - "conda install pip numpy=1.11.2 scipy=0.18.1 scikit-learn=0.18.1 nose wheel matplotlib -y -q"

  # Install other nilearn dependencies
  - "pip install coverage nose-timer"
  - "python setup.py bdist_wheel"
  - ps: "ls dist"

  # Install the generated wheel package to test it
  - "pip install --pre --no-index --find-links dist/ imbalanced-learn"

# Not a .NET project, we build in the install step instead
build: false

test_script:
  # Change to a non-source folder to make sure we run the tests on the
  # installed library.
  - "cd C:\\"
  - "python -c \"import nose; nose.main()\" -v -s --with-timer --timer-top-n 50 imblearn"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse

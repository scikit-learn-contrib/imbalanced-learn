# Adapted from https://github.com/scikit-learn/scikit-learn/blob/master/azure-pipelines.yml
jobs:
- job: linting
  displayName: Linting
  pool:
    vmImage: ubuntu-20.04
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.9'
    - bash: |
        # Include pytest compatibility with mypy
        pip install pytest flake8 mypy==0.782 black==21.6b0
      displayName: Install linters
    - bash: |
        black --check .
      displayName: Run black
    - bash: |
        ./build_tools/circle/linting.sh
      displayName: Run linting

- template: build_tools/azure/posix.yml
  parameters:
    name: Linux_Runs
    vmImage: ubuntu-20.04
    matrix:
      pylatest_pip_openblas_pandas:
        DISTRIB: 'conda-pip-latest'
        PYTHON_VERSION: '3.9'
        COVERAGE: 'true'
        PANDAS_VERSION: '*'
        TEST_DOCSTRINGS: 'true'
        JOBLIB_VERSION: '*'
        CHECK_WARNINGS: 'true'

- template: build_tools/azure/posix.yml
  parameters:
    name: Linux
    vmImage: ubuntu-20.04
    dependsOn: [linting]
    matrix:
      # Linux environment to test that scikit-learn can be built against
      # versions of numpy, scipy with ATLAS that comes with Ubuntu Bionic 18.04
      # i.e. numpy 1.13.3 and scipy 0.19
      py36_ubuntu_atlas:
        DISTRIB: 'ubuntu'
        JOBLIB_VERSION: '*'
      pylatest_conda_pandas_keras:
        DISTRIB: 'conda'
        PYTHON_VERSION: '3.7'
        INSTALL_MKL: 'true'
        PANDAS_VERSION: '*'
        KERAS_VERSION: '*'
        COVERAGE: 'true'
        JOBLIB_VERSION: '*'
        TEST_DOCSTRINGS: 'true'
      pylatest_conda_pandas_tensorflow:
        DISTRIB: 'conda'
        PYTHON_VERSION: '3.8'
        PANDAS_VERSION: '*'
        JOBLIB_VERSION: '*'
        INSTALL_MKL: 'true'
        TENSORFLOW_VERSION: '*'
        COVERAGE: 'true'
        TEST_DOCSTRINGS: 'true'
      sklearn_0_24_conda:
        DISTRIB: 'conda'
        PYTHON_VERSION: '3.7'
        SKLEARN_VERSION: '0.24.2'
        INSTALL_MKL: 'true'

- template: build_tools/azure/posix-32.yml
  parameters:
    name: Linux32
    vmImage: ubuntu-20.04
    dependsOn: [linting]
    matrix:
      py36_ubuntu_atlas_32bit:
        DISTRIB: 'ubuntu-32'
        PYTHON_VERSION: '3.6'
        JOBLIB_VERSION: '*'
        TEST_DOCSTRINGS: 'true'

- template: build_tools/azure/posix.yml
  parameters:
    name: macOS
    vmImage: macOS-10.14
    dependsOn: [linting]
    matrix:
      pylatest_conda_mkl:
        DISTRIB: 'conda'
        PYTHON_VERSION: '*'
        INSTALL_MKL: 'true'
        NUMPY_VERSION: '*'
        SCIPY_VERSION: '*'
        PANDAS_VERSION: '*'
        PYTEST_VERSION: '*'
        JOBLIB_VERSION: '*'
        COVERAGE: 'true'
        TEST_DOCSTRINGS: 'true'
        CHECK_WARNINGS: 'true'

- template: build_tools/azure/windows.yml
  parameters:
    name: Windows
    vmImage: vs2017-win2016
    dependsOn: [linting]
    matrix:
      py37_conda_mkl:
        PYTHON_VERSION: '3.8'
        PYTHON_ARCH: '64'
        PYTEST_VERSION: '*'
        COVERAGE: 'true'
        CHECK_WARNINGS: 'true'
      py36_pip_openblas_32bit:
        PYTHON_VERSION: '3.6'
        PYTHON_ARCH: '32'
